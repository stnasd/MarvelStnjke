{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/spinner.js","components/errorMessenge/13315300_5203299.jpg","components/errorMessenge/errorMessenge.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffSet","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","ErrorMessenge","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","onCharLoading","newChar","length","slice","setState","onError","setTimeout","upgradeChar","Math","floor","random","then","catch","this","errorMessenge","spinner","content","onClick","mjolnir","Component","View","classImg","CharList","chars","newCharsLoading","charsEnded","listMarvelService","onRequest","onCharListLoading","onCharsLoaded","newChars","ended","itemRefs","refsElems","item","push","focusItem","i","forEach","classList","remove","add","focus","charElements","arr","ref","tabIndex","onKeyDown","e","key","props","onSelectedChar","errorMessage","offButton","disabled","style","Skeleton","CharInfo","updateChar","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.931d3429.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=f63df0e0ac6280a04a78500411b53931';\r\n    _baseOffSet = 200;\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n    getAllCharacters = async (offset = this._baseOffSet) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?/&${this._apiKey}`)\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MarvelService;\r\n\r\n\r\n","import './spinner.css'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div id=\"cssload-pgloading\">\r\n            <div className=\"cssload-loadingwrap\">\r\n                <ul className=\"cssload-bokeh\">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/13315300_5203299.ce293654.jpg\";","import img from './13315300_5203299.jpg'\r\n\r\nimport './errorMessenge.css'\r\n\r\n\r\n\r\n\r\nconst ErrorMessenge = () => {\r\n    return (\r\n        <img src={img} alt=\"Error\" className=\"error-img\" />\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessenge;","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessenge from '../errorMessenge/errorMessenge';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.upgradeChar();\n    }\n    componentWillUnmount() {\n        // clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.onCharLoading();\n        const newChar = char;\n        if (!char.description) {\n            newChar.description = 'Description of this character is not complete yet...'\n        } else if (newChar.description.length > 180) {\n            newChar.description = newChar.description.slice(0, 180) + '...';\n        }\n        return this.setState({\n            char: newChar,\n            loading: false,\n            error: false,\n        })\n    }\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n        setTimeout(this.upgradeChar, 1000)\n    }\n\n    upgradeChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011100);\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessenge = error ? <ErrorMessenge /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessenge}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.upgradeChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n    const verificationPageUrl = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n    const classImg = (verificationPageUrl === thumbnail) ? '-default' : '';\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={`randomchar__img${classImg}`} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessenge from '../errorMessenge/errorMessenge';\nimport PropTypes from 'prop-types';\n\n\nimport { Component } from 'react';\n\nclass CharList extends Component {\n\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newCharsLoading: false,\n        offset: 200,\n        charsEnded: false,\n    }\n\n    listMarvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.listMarvelService\n            .getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({ newCharsLoading: true, })\n    }\n\n    onCharsLoaded = (newChars) => {\n        let ended = false;\n        if (newChars.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({ chars, offset }) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            newCharsLoading: false,\n            offset: offset + 9,\n            charsEnded: ended,\n        }))\n    }\n\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = []\n\n\n    refsElems = (item) => {\n        this.itemRefs.push(item);\n    }\n\n    focusItem = (i) => {\n        this.itemRefs.forEach((item) => {\n            item.classList.remove('char__item_selected');\n        })\n        this.itemRefs[i].classList.add('char__item_selected');\n        this.itemRefs[i].focus();\n    }\n\n    charElements = (arr) => {\n        const items = arr.map((item, i) => {\n            const { thumbnail, name, id } = item;\n            const classImg = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? \"char__img-default\" : '';\n            return <li className=\"char__item\"\n                ref={this.refsElems}\n                key={id}\n                tabIndex={0}\n                onKeyDown={(e) => {\n                    if (e.key === ' ' || e.key === \"Enter\") {\n                        this.props.onSelectedChar(id);\n                        this.focusItem(i);\n                    }\n                }}\n                onClick={() => {\n                    this.props.onSelectedChar(id);\n                    this.focusItem(i);\n                }}\n            >\n                <img src={thumbnail} alt={name} className={classImg} />\n                <div className=\"char__name\">{name}</div>\n            </li>\n        })\n        return <ul className=\"char__grid\">\n            {items}\n        </ul>\n    }\n    render() {\n        const { chars, loading, error, newCharsLoading, offset, charsEnded } = this.state;\n        const items = this.charElements(chars);\n\n        const errorMessage = error ? <ErrorMessenge /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n        const offButton = this.state.newCharsLoading ? ':disabled' : 'inner';\n\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\"\n                    onClick={() => this.onRequest(offset)}\n                    disabled={newCharsLoading}\n                    style={{ 'display': charsEnded ? 'none' : 'block' }}\n                >\n                    <div style={{ offButton }} className=\"inner\">load more</div>\n                </button >\n            </div >\n        )\n    }\n}\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessenge from '../errorMessenge/errorMessenge';\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport PropTypes from 'prop-types'\n\nimport { Component } from 'react';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n    marvelService = new MarvelService();\n    componentDidMount() {\n        this.updateChar();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessenge = error ? <ErrorMessenge /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessenge}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, thumbnail, wiki, homepage, description, comics } = char;\n    const classImg = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? \"char__img-default\" : '';\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} className={classImg} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'No comics found for this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return null;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessenge from \"../errorMessenge/errorMessenge\";\r\n\r\n\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({ error: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <ErrorMessenge />\r\n            )\r\n        }\r\n        return (\r\n            this.props.children\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport { Component } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\n\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null,\n    }\n\n    onSelectedChar = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\"\n                        focus={1}\n                    >\n                        <ErrorBoundary>\n                            <CharList onSelectedChar={this.onSelectedChar} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}