{"version":3,"sources":["components/pages/singleComicPage.js","components/errorMessenge/13315300_5203299.jpg","components/errorMessenge/errorMessenge.js","components/hooks/http.hook.js","services/MarvelService.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["View","comic","thumbnail","name","description","pageCount","language","price","content","className","src","alt","to","style","SingleComicPage","useState","setComic","useMarvelService","error","loading","getComic","clearError","comicId","useParams","useEffect","updateComic","then","onComicLoaded","errorMessenge","spinner","div","initial","width","animate","exit","x","window","innerWidth","transition","duration","ErrorMessenge","img","useHttp","setLoading","setError","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","getAllComics","_transformComics","char","path","extension","homepage","urls","wiki","comics","items","comicsUrls","resourceURI","item","title","textObjects","prices","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.c5858db5.chunk.js","sourcesContent":["import Spinner from '../spinner/spinner';\r\nimport ErrorMessenge from '../errorMessenge/errorMessenge';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet'\r\nimport { motion } from \"framer-motion/dist/framer-motion\"\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const [comic, setComic] = useState(null);\r\n\r\n\r\n    const { error, loading, getComic, clearError } = useMarvelService();\r\n\r\n    const { comicId } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n\r\n\r\n    const updateComic = () => {\r\n\r\n        clearError();\r\n\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic)\r\n    }\r\n\r\n\r\n    const errorMessenge = error ? <ErrorMessenge /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ width: 0 }}\r\n            animate={{ width: '100%' }}\r\n            exit={{ x: window.innerWidth, transition: { duration: 0.5 } }}\r\n        >\r\n            <AppBanner />\r\n            {errorMessenge}\r\n            {spinner}\r\n            {content}\r\n        </motion.div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst View = ({ comic }) => {\r\n    const { thumbnail, name, description, pageCount, language, price, } = comic;\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${name} comics book`}\r\n                />\r\n                <title>{name}</title>\r\n            </Helmet>\r\n            <div className=\"single-comic\" >\r\n                <img src={thumbnail} alt={name} className=\"single-comic__img\" />\r\n                <div className=\"single-comic__info\">\r\n                    <h2 className=\"single-comic__name\">{name}</h2>\r\n                    <p className=\"single-comic__descr\">{description}</p>\r\n                    <p className=\"single-comic__descr\">{pageCount}</p>\r\n                    <p className=\"single-comic__descr\">language:{language}</p>\r\n                    <div className=\"single-comic__price\">{price}</div>\r\n                </div>\r\n                <Link to=\"/comics\" className=\"single-comic__back\"\r\n                    style={{ 'color': `#9f0013` }}\r\n                >Back to all</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/13315300_5203299.ce293654.jpg\";","import img from './13315300_5203299.jpg'\r\n\r\nimport './errorMessenge.css'\r\n\r\n\r\n\r\n\r\nconst ErrorMessenge = () => {\r\n    return (\r\n        <img src={img} alt=\"Error\" className=\"error-img\" />\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessenge;","import { useState, useCallback } from \"react\"\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting')\r\n\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"aplication/json\" }) => {\r\n\r\n        setLoading(true);\r\n        setProcess('loading');\r\n        try {\r\n            const response = await fetch(url, { method, headers, body });\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error')\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('loading');\r\n    }, [])\r\n\r\n    return { request, loading, error, clearError, process, setProcess }\r\n}\r\n\r\n\r\nexport default useHttp;","import { useHttp } from \"../components/hooks/http.hook\"\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError, process, setProcess } = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // const _apiKey = 'apikey=f63df0e0ac6280a04a78500411b53931';\r\n    // const _apiKey = 'apikey=7dae8a44fd3de105d0687f0c9cff2944';\r\n    const _apiKey = 'apikey=e3432be01e1b4538a1a106d69d953f2d';\r\n    const _baseOffSet = 200;\r\n    const _baseOffSetCom = 300;\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffSet) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n        clearError()\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?/&${_apiKey}`)\r\n        clearError()\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getAllComics = async (offset = _baseOffSetCom) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n        clearError()\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?/&${_apiKey}`)\r\n        clearError()\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items,\r\n            comicsUrls: char.comics.items.resourceURI,\r\n        }\r\n    }\r\n\r\n    const _transformComics = (item) => {\r\n        return {\r\n            name: item.title,\r\n            description: item.description || \"There is no description\",\r\n            pageCount: item.pageCount\r\n                ? `${item.pageCount} pages`\r\n                : \"No information about the number of pages\",\r\n            language: item.textObjects[0]?.language || \"en-us\",\r\n            thumbnail: item.thumbnail.path + '.' + item.thumbnail.extension || null,\r\n            price: item.prices[0].price ? `${item.prices[0].price} €` : \"not available\",\r\n            id: item.id\r\n        }\r\n    }\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        clearError,\r\n        getAllComics,\r\n        getComic,\r\n        getCharacterByName,\r\n        process,\r\n        setProcess\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default useMarvelService;\r\n\r\n\r\n// ___________","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}